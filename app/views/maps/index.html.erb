<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body, #map-canvas {
        height: 100%;
        margin: 0px;
        padding: 0px
      }
      .controls {
        margin-top: 16px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        padding: 0 11px 0 13px;
        width: 400px;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        text-overflow: ellipsis;
      }

      #pac-input:focus {
        border-color: #4d90fe;
        margin-left: -1px;
        padding-left: 14px;  /* Regular padding-left + 1. */
        width: 401px;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }

    </style>
    <title>Tripgraph</title>
    <script src="//maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js" ></script>
    <script>
function initialize() {

  var map = new google.maps.Map(document.getElementById('map-canvas'), {
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  map.setCenter(new google.maps.LatLng(0, 0));
  map.setZoom(2);

  var form = document.getElementById('pac-form');
  var input = document.getElementById('pac-input');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(form);

  var markers = {};
  var lines = {};

  function search(q, bounds) {
    var sw = bounds.getSouthWest();
    var ne = bounds.getNorthEast();

    var params = {
      q: q
    };

    if (!(sw.lng() == -180 && ne.lng() == 180)) {
      params['top_left'] = ne.lat() + "," + sw.lng();
      params['bottom_right'] = sw.lat() + "," + ne.lng();
    }

    $.getJSON("/search.json", params, function(json) {
      var trips = {};
      var places = {};
      var trip_places = {};

      $.each(json.trips, function(index, trip) {
        trips[trip.id] = trip;
        trips[trip.id].trip_place_ids = [];
      });
      $.each(json.places, function(index, place) {
        places[place.id] = place;
        places[place.id].trip_place_ids = [];
      });
      $.each(json.trip_places, function(index, trip_place) {
        trips[trip_place.trip_id].trip_place_ids.push(trip_place.id);
        places[trip_place.place_id].trip_place_ids.push(trip_place.id);
        trip_places[trip_place.id] = trip_place;
      });

      updateMap(map, markers, getMarkers(trips, places, trip_places));
      updateMap(map, lines, getLines(trips, places, trip_places));
    });
  }

  function getMarkers(trips, places, trip_places) {
    var markers = {};

    $.each(places, function(id, place) {
      if (place.lat != null && place.lon != null) {
        var marker = new google.maps.Marker({
          position: new google.maps.LatLng(place.lat, place.lon),
          title: place.name
        });
        markers[id] = marker;
      }
    });

    return markers;
  }

  function getLines(trips, places, trip_places) {
    var lines = {};

    $.each(trips, function(id, trip) {
      var path = trip.trip_place_ids
        .map(function(trip_place_id) {
          return trip_places[trip_place_id];
        })
        .sort(function(trip_place_a, trip_place_b) {
          return trip_place_a.ordinal - trip_place_b.ordinal;
        })
        .filter(function(trip_place) {
          return places[trip_place.place_id].lat != null && places[trip_place.place_id].lat != null;
        });

      for (var i=1; i<path.length; i++) {
        var p1 = places[path[i-1].place_id];
        var p2 = places[path[i].place_id];
        var line = new google.maps.Polyline({
          path: [p1, p2]
            .map(function(place) {
              return new google.maps.LatLng(place.lat, place.lon);
            }),
          geodesic: true
        });

        lines[p1.id + "," + p2.id] = line;
      }
    });

    return lines;
  }

  function updateMap(map, source, target) {
    $.each(target, function(id, element) {
      if (!(id in source)) {
        element.setMap(map);
        source[id] = element;
      }
    });
    $.each(source, function(id, element) {
      if (!(id in target)) {
        delete source[id];
        element.setMap(null);
      }
    });
  }

  form.addEventListener('submit', function(event) {
    event.preventDefault();
    if (input.value) {
      search(input.value, map.getBounds());
    }
  });

  google.maps.event.addListener(map, 'idle', function() {
    if (input.value) {
      search(input.value, map.getBounds());
    }
  });

}

google.maps.event.addDomListener(window, 'load', initialize);

    </script>
    <style>
      #target {
        width: 345px;
      }
    </style>
  </head>
  <body>
    <form action="#" id="pac-form">
      <input id="pac-input" class="controls" type="text" placeholder="Search Box">
    </form>
    <div id="map-canvas"></div>
  </body>
</html>


